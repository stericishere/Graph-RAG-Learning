[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ruling-database-mcp"
version = "0.1.0"
description = "Final Minimal Lean Graph Database MCP Server - A highly efficient, minimal graph database MCP server for AI agents"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Graph Database MCP Team"},
]
maintainers = [
    {name = "Graph Database MCP Team"},
]
keywords = [
    "mcp",
    "model-context-protocol", 
    "graph-database",
    "neo4j",
    "networkx",
    "ai-agents",
    "rules-engine",
    "learning-system"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "neo4j==5.25.0",
    "networkx==3.4.2",
    "python-dotenv==1.0.0",
    "fastapi==0.115.5",
    "uvicorn[standard]==0.32.1",
    "pydantic==2.9.2",
    "typing-extensions==4.12.2",
    "loguru==0.7.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "black>=24.10.0",
    "flake8>=7.1.1",
    "mypy>=1.13.0",
    "pre-commit>=3.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/ruling-database-mcp"
"Bug Reports" = "https://github.com/yourusername/ruling-database-mcp/issues"
"Source" = "https://github.com/yourusername/ruling-database-mcp"

[project.scripts]
ruling-mcp-server = "src.server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 